function f = adpmedian(g,Smax)
% adpmedian    Perform adaptive median filtering
% F = adaptive(g,Smax) performs adaptive median filtering of image g. The
% median filter starts at size 3-by-3 and iterates up to size Smax-by-Smax.

% 这个自适应中指滤波算法工作在两个层面，表示为levelA和levelB：
% Level A：若zmin < zmed < zmax,则转向level B；否则增加窗口尺寸，若窗口尺寸
% <= Smax,重复level A，否则输出zmed
% Level B：若zmin < zxy <zmax，则输出zxy，否则输出zmed

% g   an image
% Smax  掩模，Smax must be an odd integer greater than 1.

% Hai-Bo Chen 2019/4/29 摘录于冈萨雷斯《数字图像处理》

if (Smax <= 1)||(Smax/2 == round(Smax/2))||(Smax ~= round(Smax))
    error('Smax must be an odd integer > 1 .')
end

% Initial setup
f = g;
f(:) = 0;
alreadyProcessed = false(size(g));

% Begin filtering
for k = 3:2:Smax
    zmin = ordfilt2(g,1,ones(k,k),'symmetric');
    zmax = ordfilt2(g,k*k,ones(k,k),'symmetric');
    zmed = medfilt2(g,[k k],'symmetric');
    processUsingLevelB = (zmed > zmin) & (zmax > zmed) & ~alreadyProcessed;
    zB = (g > zmin) & (zmax > g);
    outputZxy = processUsingLevelB & zB;
    outputZmed = processUsingLevelB & ~zB;
    f(outputZxy) = g(outputZxy);
    f(outputZmed) = zmed(outputZmed);
    alreadyProcessed = alreadyProcessed | processUsingLevelB;
    if all(alreadyProcessed(:))
        break;
    end
end
% Output zmed for any remaining unprocessed pixels. Note that this zmed was
% computed using a window of size Smax-by-Smax, which is the final value of
% k in the loop.
f(~alreadyProcessed) = zmed(~alreadyProcessed);
end


